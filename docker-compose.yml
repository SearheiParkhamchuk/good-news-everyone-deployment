services:
  server:
    build: 
      context: ./good-news-everyone-server
      target: production
    container_name: ${SERVER_HOST}
    restart: always
    env_file:
      - .env
    depends_on:
      - postgres
    networks:
      - app

  client:
    build: 
      context: ./good-news-everyone-client
      target: production
    container_name: ${CLIENT_HOST}
    restart: always
    env_file:
      - .env
    networks:
      - app

  postgres:
    extends:
      file: ./good-news-everyone-server/docker-compose.yml
      service: postgres
    networks:
      - app

  reverse-proxy:
    image: nginx:latest
    container_name: reverse-proxy
    restart: always
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf.template:/etc/nginx/templates/default.conf.template
      - ./nginx/conf:/etc/nginx/conf.d
      - ./certbot/conf/:/etc/letsencrypt/:ro
      - ./certbot/www/:/var/www/certbot/:ro
    depends_on:
      - server
      - client
    networks:
      - app

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

networks:
  app:
    driver: bridge